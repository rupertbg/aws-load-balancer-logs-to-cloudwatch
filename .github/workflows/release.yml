name: Release

on:
  release:
    types:
      - published

env:
  REGISTRY_ALIAS: l8n5z4p2
  IMAGE_NAME: awslb2cwlogs
  DOCKERFILE_PATH: Dockerfile

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: src
        run: npm i

      - name: Run tests
        working-directory: src
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
          registry-type: public

      - name: Build and push
        uses: docker/build-push-action@v5
        id: image-build
        with:
          platforms: linux/amd64,linux/arm64
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          provenance: false
          tags: >-
            ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ env.IMAGE_NAME }}:${{ github.sha }},
            ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }},
            ${{ steps.login-ecr.outputs.registry }}/${{ env.REGISTRY_ALIAS }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha,scope=${{ env.IMAGE_NAME }}
          cache-to: ${{ format('type=gha,mode=max,scope={0}', env.IMAGE_NAME)}}
